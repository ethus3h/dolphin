/****************************************************************************
** Meta object code from reading C++ file 'kitemlistselectionmanagertest.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.7.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'kitemlistselectionmanagertest.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.7.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
struct qt_meta_stringdata_DummyModel_t {
    QByteArrayData data[1];
    char stringdata0[11];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_DummyModel_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_DummyModel_t qt_meta_stringdata_DummyModel = {
    {
QT_MOC_LITERAL(0, 0, 10) // "DummyModel"

    },
    "DummyModel"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_DummyModel[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void DummyModel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject DummyModel::staticMetaObject = {
    { &KItemModelBase::staticMetaObject, qt_meta_stringdata_DummyModel.data,
      qt_meta_data_DummyModel,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *DummyModel::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *DummyModel::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_DummyModel.stringdata0))
        return static_cast<void*>(const_cast< DummyModel*>(this));
    return KItemModelBase::qt_metacast(_clname);
}

int DummyModel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = KItemModelBase::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    return _id;
}
struct qt_meta_stringdata_KItemListSelectionManagerTest_t {
    QByteArrayData data[16];
    char stringdata0[312];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_KItemListSelectionManagerTest_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_KItemListSelectionManagerTest_t qt_meta_stringdata_KItemListSelectionManagerTest = {
    {
QT_MOC_LITERAL(0, 0, 29), // "KItemListSelectionManagerTest"
QT_MOC_LITERAL(1, 30, 4), // "init"
QT_MOC_LITERAL(2, 35, 0), // ""
QT_MOC_LITERAL(3, 36, 7), // "cleanup"
QT_MOC_LITERAL(4, 44, 15), // "testConstructor"
QT_MOC_LITERAL(5, 60, 25), // "testCurrentItemAnchorItem"
QT_MOC_LITERAL(6, 86, 20), // "testSetSelected_data"
QT_MOC_LITERAL(7, 107, 15), // "testSetSelected"
QT_MOC_LITERAL(8, 123, 17), // "testItemsInserted"
QT_MOC_LITERAL(9, 141, 16), // "testItemsRemoved"
QT_MOC_LITERAL(10, 158, 21), // "testAnchoredSelection"
QT_MOC_LITERAL(11, 180, 24), // "testChangeSelection_data"
QT_MOC_LITERAL(12, 205, 19), // "testChangeSelection"
QT_MOC_LITERAL(13, 225, 26), // "testDeleteCurrentItem_data"
QT_MOC_LITERAL(14, 252, 21), // "testDeleteCurrentItem"
QT_MOC_LITERAL(15, 274, 37) // "testAnchoredSelectionAfterMov..."

    },
    "KItemListSelectionManagerTest\0init\0\0"
    "cleanup\0testConstructor\0"
    "testCurrentItemAnchorItem\0"
    "testSetSelected_data\0testSetSelected\0"
    "testItemsInserted\0testItemsRemoved\0"
    "testAnchoredSelection\0testChangeSelection_data\0"
    "testChangeSelection\0testDeleteCurrentItem_data\0"
    "testDeleteCurrentItem\0"
    "testAnchoredSelectionAfterMovingItems"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_KItemListSelectionManagerTest[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      14,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   84,    2, 0x08 /* Private */,
       3,    0,   85,    2, 0x08 /* Private */,
       4,    0,   86,    2, 0x08 /* Private */,
       5,    0,   87,    2, 0x08 /* Private */,
       6,    0,   88,    2, 0x08 /* Private */,
       7,    0,   89,    2, 0x08 /* Private */,
       8,    0,   90,    2, 0x08 /* Private */,
       9,    0,   91,    2, 0x08 /* Private */,
      10,    0,   92,    2, 0x08 /* Private */,
      11,    0,   93,    2, 0x08 /* Private */,
      12,    0,   94,    2, 0x08 /* Private */,
      13,    0,   95,    2, 0x08 /* Private */,
      14,    0,   96,    2, 0x08 /* Private */,
      15,    0,   97,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void KItemListSelectionManagerTest::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        KItemListSelectionManagerTest *_t = static_cast<KItemListSelectionManagerTest *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->init(); break;
        case 1: _t->cleanup(); break;
        case 2: _t->testConstructor(); break;
        case 3: _t->testCurrentItemAnchorItem(); break;
        case 4: _t->testSetSelected_data(); break;
        case 5: _t->testSetSelected(); break;
        case 6: _t->testItemsInserted(); break;
        case 7: _t->testItemsRemoved(); break;
        case 8: _t->testAnchoredSelection(); break;
        case 9: _t->testChangeSelection_data(); break;
        case 10: _t->testChangeSelection(); break;
        case 11: _t->testDeleteCurrentItem_data(); break;
        case 12: _t->testDeleteCurrentItem(); break;
        case 13: _t->testAnchoredSelectionAfterMovingItems(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject KItemListSelectionManagerTest::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_KItemListSelectionManagerTest.data,
      qt_meta_data_KItemListSelectionManagerTest,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *KItemListSelectionManagerTest::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *KItemListSelectionManagerTest::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_KItemListSelectionManagerTest.stringdata0))
        return static_cast<void*>(const_cast< KItemListSelectionManagerTest*>(this));
    return QObject::qt_metacast(_clname);
}

int KItemListSelectionManagerTest::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 14)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 14;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 14)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 14;
    }
    return _id;
}
QT_END_MOC_NAMESPACE
